@page "/login"
@using Microsoft.EntityFrameworkCore;
@inject NavigationManager navigationManager
@inject IDbContextFactory<RegisterDBContext> dbFactory
@inject SessionState SessionState

<EditForm Model="@model" OnValidSubmit="HandleSubmit">
    <div class="container">
        <div class="row justify-content-center mt-5">
            <div class="col-12 col-sm-8 col-md-6 col-lg-4">
                <div class="card shadow-sm">
                    <div class="card-header text-center bg-white border-bottom-0">
                        <img src="images/logo.png"
                             alt="AlienCore logo"
                             class="mb-2"
                             style="width:96px; height:96px;" />
                        <h5 class="card-title mb-0">Login</h5>
                    </div>
                    <div class="card-body p-4">
                        <div class="mb-3">
                            <label for="email" class="form-label">Email</label>
                            <InputText id="username" @bind-Value="@model.Email" class="form-control" placeholder="Enter Email..." />
                        </div>
                        <div class="mb-3">
                            <label for="password" class="form-label">Password</label>
                            <InputText id="password" @bind-Value="@model.Password" class="form-control" type="password" placeholder="Enter Password..." />
                        </div>
                        <button type="submit" class="btn btn-primary w-100">Login</button>
                    </div>
                    <div class="card-footer">
                        @if (!string.IsNullOrEmpty(_errorMessage))
                        {
                            <div class="alert alert-danger" role="alert">
                                @_errorMessage
                            </div>
                        }
                        <p class="mt-2">Don't have an account? <a href="/registration">Register here</a>.</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</EditForm>

@code {
    LoginModel model = new LoginModel();
    private string _errorMessage = string.Empty;
    private PasswordHasher _passwordHasher = new PasswordHasher();

    private async Task HandleSubmit()
    {
        try
        {
            using var db = dbFactory.CreateDbContext();

            var user = await db.Users.FirstOrDefaultAsync(u => u.Email == model.Email);

            if (user is null)
            {
                _errorMessage = "Invalid email or password";
                return;
            }
            bool ok = _passwordHasher.Verify(user.Password, model.Password);

            if (!ok)
            {
                _errorMessage = "Invalid email or password";
                return;

            }

            SessionState.CurrentUser = user;
            // Login successful, redirect to home page
            navigationManager.NavigateTo("/loggedin");
        }
        catch (Exception ex)
        {
            _errorMessage = $"An error occurred while processing your request: {ex.Message}";
        }
    }

}
